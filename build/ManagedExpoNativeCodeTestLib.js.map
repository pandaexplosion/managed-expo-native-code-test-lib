{"version":3,"file":"ManagedExpoNativeCodeTestLib.js","sourceRoot":"","sources":["../src/ManagedExpoNativeCodeTestLib.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,YAAY,EAAgB,MAAM,mBAAmB,CAAC;AAEnF,+FAA+F;AAC/F,6DAA6D;AAC7D,OAAO,4BAA4B,MAAM,sCAAsC,CAAC;AAChF,OAAO,gCAAgC,MAAM,oCAAoC,CAAC;AAGlF,iCAAiC;AACjC,MAAM,CAAC,MAAM,EAAE,GAAG,4BAA4B,CAAC,EAAE,CAAC;AAElD,MAAM,UAAU,KAAK;IACnB,OAAO,4BAA4B,CAAC,KAAK,EAAE,CAAC;AAC9C,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,KAAa;IAC/C,OAAO,MAAM,4BAA4B,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACjE,CAAC;AAED,6FAA6F;AAC7F,6EAA6E;AAC7E,sIAAsI;AACtI,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,kBAAkB,CAAC,4BAA4B,IAAI,4BAA4B,CAAC,CAAC;AAElH,MAAM,UAAU,iBAAiB,CAAC,QAA6C;IAC7E,OAAO,OAAO,CAAC,WAAW,CAAqB,UAAU,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,EAAE,gCAAgC,EAA6D,CAAC","sourcesContent":["import { NativeModulesProxy, EventEmitter, Subscription } from 'expo-modules-core';\n\n// Import the native module. On web, it will be resolved to ManagedExpoNativeCodeTestLib.web.ts\n// and on native platforms to ManagedExpoNativeCodeTestLib.ts\nimport ManagedExpoNativeCodeTestLib from './ManagedExpoNativeCodeTestLibModule';\nimport ManagedExpoNativeCodeTestLibView from './ManagedExpoNativeCodeTestLibView';\nimport { ChangeEventPayload, ManagedExpoNativeCodeTestLibViewProps } from './ManagedExpoNativeCodeTestLib.types';\n\n// Get the native constant value.\nexport const PI = ManagedExpoNativeCodeTestLib.PI;\n\nexport function hello(): string {\n  return ManagedExpoNativeCodeTestLib.hello();\n}\n\nexport async function setValueAsync(value: string) {\n  return await ManagedExpoNativeCodeTestLib.setValueAsync(value);\n}\n\n// For now the events are not going through the JSI, so we have to use its bridge equivalent.\n// This will be fixed in the stable release and built into the module object.\n// Note: On web, NativeModulesProxy.ManagedExpoNativeCodeTestLib is undefined, so we fall back to the directly imported implementation\nconst emitter = new EventEmitter(NativeModulesProxy.ManagedExpoNativeCodeTestLib ?? ManagedExpoNativeCodeTestLib);\n\nexport function addChangeListener(listener: (event: ChangeEventPayload) => void): Subscription {\n  return emitter.addListener<ChangeEventPayload>('onChange', listener);\n}\n\nexport { ManagedExpoNativeCodeTestLibView, ManagedExpoNativeCodeTestLibViewProps, ChangeEventPayload };\n"]}